name: Acanet BE CD

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: Trigger the workflow
        required: true
        default: 'deploy'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    if: ${{ github.event.inputs.trigger == 'deploy' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.15.0'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

  docker-build-user-api:
    runs-on: ubuntu-latest
    needs: build
    environment: development
    if: ${{ github.event.inputs.trigger == 'deploy' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set Short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build Docker image for user-api
        uses: docker/build-push-action@v3
        with:
          context: ./apps/user-api
          push: true
          tags: hoainambeco/user-api:develop-${{ env.SHORT_SHA }}
          file: ./apps/user-api/Dockerfile
          platforms: linux/amd64
          build-args: NODE_ENV=development

  docker-build-job-runner:
    runs-on: ubuntu-latest
    needs: build
    environment: development
    if: ${{ github.event.inputs.trigger == 'deploy' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set Short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build Docker image for job-runner
        uses: docker/build-push-action@v3
        with:
          context: ./apps/job-runner
          push: true
          tags: hoainambeco/job-runner:develop-${{ env.SHORT_SHA }}
          file: ./apps/job-runner/Dockerfile
          platforms: linux/amd64
          build-args: NODE_ENV=development

  request_to_deploy:
    runs-on: ubuntu-latest
    needs: [docker-build-user-api, docker-build-job-runner]
    environment: development
    if: ${{ github.event.inputs.trigger == 'deploy' }}

    steps:
      - name: Set Short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: C07CURB6C5S
          slack-message: '<@${{ github.actor }}> request to deploy hoainambeco/user-api:develop-${{ env.SHORT_SHA }} and hoainambeco/job-runner:develop-${{ env.SHORT_SHA }} to Development'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_CICD_TOKEN }}
